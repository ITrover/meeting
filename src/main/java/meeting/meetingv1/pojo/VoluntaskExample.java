package meeting.meetingv1.pojo;

import java.util.ArrayList;
import java.util.List;

public class VoluntaskExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public VoluntaskExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTaskidIsNull() {
            addCriterion("taskid is null");
            return (Criteria) this;
        }

        public Criteria andTaskidIsNotNull() {
            addCriterion("taskid is not null");
            return (Criteria) this;
        }

        public Criteria andTaskidEqualTo(Integer value) {
            addCriterion("taskid =", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidNotEqualTo(Integer value) {
            addCriterion("taskid <>", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidGreaterThan(Integer value) {
            addCriterion("taskid >", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidGreaterThanOrEqualTo(Integer value) {
            addCriterion("taskid >=", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidLessThan(Integer value) {
            addCriterion("taskid <", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidLessThanOrEqualTo(Integer value) {
            addCriterion("taskid <=", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidIn(List<Integer> values) {
            addCriterion("taskid in", values, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidNotIn(List<Integer> values) {
            addCriterion("taskid not in", values, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidBetween(Integer value1, Integer value2) {
            addCriterion("taskid between", value1, value2, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidNotBetween(Integer value1, Integer value2) {
            addCriterion("taskid not between", value1, value2, "taskid");
            return (Criteria) this;
        }

        public Criteria andMeetidIsNull() {
            addCriterion("meetid is null");
            return (Criteria) this;
        }

        public Criteria andMeetidIsNotNull() {
            addCriterion("meetid is not null");
            return (Criteria) this;
        }

        public Criteria andMeetidEqualTo(Integer value) {
            addCriterion("meetid =", value, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidNotEqualTo(Integer value) {
            addCriterion("meetid <>", value, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidGreaterThan(Integer value) {
            addCriterion("meetid >", value, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidGreaterThanOrEqualTo(Integer value) {
            addCriterion("meetid >=", value, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidLessThan(Integer value) {
            addCriterion("meetid <", value, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidLessThanOrEqualTo(Integer value) {
            addCriterion("meetid <=", value, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidIn(List<Integer> values) {
            addCriterion("meetid in", values, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidNotIn(List<Integer> values) {
            addCriterion("meetid not in", values, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidBetween(Integer value1, Integer value2) {
            addCriterion("meetid between", value1, value2, "meetid");
            return (Criteria) this;
        }

        public Criteria andMeetidNotBetween(Integer value1, Integer value2) {
            addCriterion("meetid not between", value1, value2, "meetid");
            return (Criteria) this;
        }

        public Criteria andTaskinfoIsNull() {
            addCriterion("taskinfo is null");
            return (Criteria) this;
        }

        public Criteria andTaskinfoIsNotNull() {
            addCriterion("taskinfo is not null");
            return (Criteria) this;
        }

        public Criteria andTaskinfoEqualTo(String value) {
            addCriterion("taskinfo =", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoNotEqualTo(String value) {
            addCriterion("taskinfo <>", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoGreaterThan(String value) {
            addCriterion("taskinfo >", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoGreaterThanOrEqualTo(String value) {
            addCriterion("taskinfo >=", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoLessThan(String value) {
            addCriterion("taskinfo <", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoLessThanOrEqualTo(String value) {
            addCriterion("taskinfo <=", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoLike(String value) {
            addCriterion("taskinfo like", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoNotLike(String value) {
            addCriterion("taskinfo not like", value, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoIn(List<String> values) {
            addCriterion("taskinfo in", values, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoNotIn(List<String> values) {
            addCriterion("taskinfo not in", values, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoBetween(String value1, String value2) {
            addCriterion("taskinfo between", value1, value2, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andTaskinfoNotBetween(String value1, String value2) {
            addCriterion("taskinfo not between", value1, value2, "taskinfo");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeIsNull() {
            addCriterion("workingtime is null");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeIsNotNull() {
            addCriterion("workingtime is not null");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeEqualTo(Integer value) {
            addCriterion("workingtime =", value, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeNotEqualTo(Integer value) {
            addCriterion("workingtime <>", value, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeGreaterThan(Integer value) {
            addCriterion("workingtime >", value, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("workingtime >=", value, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeLessThan(Integer value) {
            addCriterion("workingtime <", value, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeLessThanOrEqualTo(Integer value) {
            addCriterion("workingtime <=", value, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeIn(List<Integer> values) {
            addCriterion("workingtime in", values, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeNotIn(List<Integer> values) {
            addCriterion("workingtime not in", values, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeBetween(Integer value1, Integer value2) {
            addCriterion("workingtime between", value1, value2, "workingtime");
            return (Criteria) this;
        }

        public Criteria andWorkingtimeNotBetween(Integer value1, Integer value2) {
            addCriterion("workingtime not between", value1, value2, "workingtime");
            return (Criteria) this;
        }

        public Criteria andNumbersIsNull() {
            addCriterion("numbers is null");
            return (Criteria) this;
        }

        public Criteria andNumbersIsNotNull() {
            addCriterion("numbers is not null");
            return (Criteria) this;
        }

        public Criteria andNumbersEqualTo(Integer value) {
            addCriterion("numbers =", value, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersNotEqualTo(Integer value) {
            addCriterion("numbers <>", value, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersGreaterThan(Integer value) {
            addCriterion("numbers >", value, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersGreaterThanOrEqualTo(Integer value) {
            addCriterion("numbers >=", value, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersLessThan(Integer value) {
            addCriterion("numbers <", value, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersLessThanOrEqualTo(Integer value) {
            addCriterion("numbers <=", value, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersIn(List<Integer> values) {
            addCriterion("numbers in", values, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersNotIn(List<Integer> values) {
            addCriterion("numbers not in", values, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersBetween(Integer value1, Integer value2) {
            addCriterion("numbers between", value1, value2, "numbers");
            return (Criteria) this;
        }

        public Criteria andNumbersNotBetween(Integer value1, Integer value2) {
            addCriterion("numbers not between", value1, value2, "numbers");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table voluntask
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table voluntask
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}