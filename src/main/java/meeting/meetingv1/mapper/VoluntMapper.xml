<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="meeting.meetingv1.mapper.VoluntMapper">
  <resultMap id="BaseResultMap" type="meeting.meetingv1.pojo.Volunt">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="volunt" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="meetid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="introduction" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isproof" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    volunt, meetid, introduction, number, isproof
  </sql>
  <select id="selectByExample" parameterType="meeting.meetingv1.pojo.VoluntExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from volunt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="meeting.meetingv1.pojo.VoluntKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from volunt
    where volunt = #{volunt,jdbcType=INTEGER}
      and meetid = #{meetid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="meeting.meetingv1.pojo.VoluntKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from volunt
    where volunt = #{volunt,jdbcType=INTEGER}
      and meetid = #{meetid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="meeting.meetingv1.pojo.Volunt">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into volunt (volunt, meetid, introduction, 
      number, isproof)
    values (#{volunt,jdbcType=INTEGER}, #{meetid,jdbcType=INTEGER}, #{introduction,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{isproof,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="meeting.meetingv1.pojo.Volunt">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into volunt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="volunt != null">
        volunt,
      </if>
      <if test="meetid != null">
        meetid,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="isproof != null">
        isproof,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="volunt != null">
        #{volunt,jdbcType=INTEGER},
      </if>
      <if test="meetid != null">
        #{meetid,jdbcType=INTEGER},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="isproof != null">
        #{isproof,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="meeting.meetingv1.pojo.Volunt">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update volunt
    <set>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="isproof != null">
        isproof = #{isproof,jdbcType=INTEGER},
      </if>
    </set>
    where volunt = #{volunt,jdbcType=INTEGER}
      and meetid = #{meetid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="meeting.meetingv1.pojo.Volunt">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update volunt
    set introduction = #{introduction,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      isproof = #{isproof,jdbcType=INTEGER}
    where volunt = #{volunt,jdbcType=INTEGER}
      and meetid = #{meetid,jdbcType=INTEGER}
  </update>
</mapper>